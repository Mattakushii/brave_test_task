{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\components\\\\inputComponent\\\\FormInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Input, InputBlock } from './FormInputStyled';\nimport { useState, useEffect } from 'react';\n\nvar FormInput = function FormInput(props) {\n  _s();\n\n  //для избежания предупреждения useLayoutEffect на стороне сервера\n  var _useState = useState(false),\n      showChild = _useState[0],\n      setShowChild = _useState[1];\n\n  var _setState = setState(false),\n      _setState2 = _slicedToArray(_setState, 2),\n      valid = _setState2[0],\n      setValid = _setState2[1];\n\n  useEffect(function () {\n    setShowChild(true);\n  }, []);\n  var regExp = props.regExp;\n\n  function handleInputValue(e) {\n    if (props.regExp.test(e.target.value)) {\n      props.validateMethod(e.target.value);\n      set;\n    } else {\n      console.log(false);\n    }\n  }\n\n  if (!showChild) {\n    return null;\n  } else return __jsx(InputBlock, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: props.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, props.labelName), __jsx(Input, {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    mask: props.mask,\n    onChange: function onChange(e) {\n      return handleInputValue(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, valid));\n};\n\n_s(FormInput, \"OPzvfNNxsdCqaevHXa2v7NfkpUQ=\");\n\n_c = FormInput;\nexport default FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/components/inputComponent/FormInput.js"],"names":["Input","InputBlock","useState","useEffect","FormInput","props","showChild","setShowChild","setState","valid","setValid","regExp","handleInputValue","e","test","target","value","validateMethod","set","console","log","id","labelName","type","placeholder","mask"],"mappings":";;;;;;;;AAAA,SAAQA,KAAR,EAAeC,UAAf,QAAgC,mBAAhC;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AACzB;AADyB,kBAESH,QAAQ,CAAC,KAAD,CAFjB;AAAA,MAElBI,SAFkB;AAAA,MAEPC,YAFO;;AAAA,kBAGCC,QAAQ,CAAC,KAAD,CAHT;AAAA;AAAA,MAGlBC,KAHkB;AAAA,MAGXC,QAHW;;AAIzBP,EAAAA,SAAS,CAAC,YAAM;AAAEI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoB,GAA7B,EAA+B,EAA/B,CAAT;AAEA,MAAMI,MAAM,GAAGN,KAAK,CAACM,MAArB;;AAEA,WAASC,gBAAT,CAA0BC,CAA1B,EAA6B;AACzB,QAAGR,KAAK,CAACM,MAAN,CAAaG,IAAb,CAAkBD,CAAC,CAACE,MAAF,CAASC,KAA3B,CAAH,EAAsC;AAClCX,MAAAA,KAAK,CAACY,cAAN,CAAqBJ,CAAC,CAACE,MAAF,CAASC,KAA9B;AACAE,MAAAA,GAAG;AACN,KAHD,MAGO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;AACJ;;AAED,MAAI,CAACd,SAAL,EAAgB;AACZ,WAAO,IAAP;AACH,GAFD,MAEM,OACF,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAED,KAAK,CAACgB,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BhB,KAAK,CAACiB,SAAjC,CADJ,EAEI,MAAC,KAAD;AACI,IAAA,EAAE,EAAEjB,KAAK,CAACgB,EADd;AAEI,IAAA,IAAI,EAAEhB,KAAK,CAACkB,IAFhB;AAGI,IAAA,WAAW,EAAElB,KAAK,CAACmB,WAHvB;AAII,IAAA,IAAI,EAAEnB,KAAK,CAACoB,IAJhB;AAKI,IAAA,QAAQ,EAAE,kBAACZ,CAAD;AAAA,aAAMD,gBAAgB,CAACC,CAAD,CAAtB;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,KAAN,CATJ,CADE;AAaT,CAhCD;;GAAML,S;;KAAAA,S;AAkCN,eAAeA,SAAf","sourcesContent":["import {Input, InputBlock} from './FormInputStyled';\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nconst FormInput = (props) => { \r\n    //для избежания предупреждения useLayoutEffect на стороне сервера\r\n    const [showChild, setShowChild] = useState(false);\r\n    const [valid, setValid] = setState(false);\r\n    useEffect(() => { setShowChild(true) }, []);\r\n\r\n    const regExp = props.regExp;\r\n\r\n    function handleInputValue(e) {\r\n        if(props.regExp.test(e.target.value)) {\r\n            props.validateMethod(e.target.value);\r\n            set\r\n        } else {\r\n            console.log(false);\r\n        }\r\n    }\r\n\r\n    if (!showChild) {\r\n        return null;\r\n    }else return(\r\n        <InputBlock>\r\n            <label htmlFor={props.id}>{props.labelName}</label>\r\n            <Input\r\n                id={props.id}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                mask={props.mask}\r\n                onChange={(e)=> handleInputValue(e)}>\r\n            </Input>\r\n            <div>{valid}</div>\r\n        </InputBlock>\r\n    )\r\n}\r\n\r\nexport default FormInput"]},"metadata":{},"sourceType":"module"}