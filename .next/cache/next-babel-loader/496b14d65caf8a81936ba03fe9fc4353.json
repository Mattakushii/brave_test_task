{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport OperatorsList from \"../components/operatorsListComponent/OperatorsList\";\n\nconst MainPage = ({\n  data\n}) => {\n  const newOperator = {\n    \"id\": \"4\",\n    \"operatorName\": \"Yota\",\n    \"operatorLink\": \"yota\",\n    \"slogan\": \"ya yo ta\"\n  };\n  const [isVisible, setIsVisible] = useState(false);\n  const [operatorsList, setOperatorsList] = useState(props.dataList);\n\n  async function handleChange() {\n    const response = await fetch('http://localhost:3000/api/operators/addOperator', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(newOperator)\n    });\n    const result = await response.json();\n    setOperatorsList(operatorsList => {\n      return [...operatorsList, result];\n    });\n  }\n\n  return __jsx(TileContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, operatorsList.map(operator => {\n    return __jsx(OperatorTile, {\n      key: operator.id,\n      id: operator.id,\n      name: operator.operatorName,\n      link: operator.operatorLink,\n      imgUrl: operator.imgUrl,\n      slogan: operator.slogan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    });\n  }), __jsx(Button, {\n    onClick: () => setIsVisible(!isVisible),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"sssss\"), __jsx(Test, {\n    visible: isVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, `${isVisible}`));\n};\n\nMainPage.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/operators');\n  const data = await res.json();\n  return {\n    data: data\n  };\n};\n\nexport default MainPage;","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/pages/index.js"],"names":["OperatorsList","MainPage","data","newOperator","isVisible","setIsVisible","useState","operatorsList","setOperatorsList","props","dataList","handleChange","response","fetch","method","headers","body","JSON","stringify","result","json","map","operator","id","operatorName","operatorLink","imgUrl","slogan","getInitialProps","res"],"mappings":";;;AACA,OAAOA,aAAP,MAA0B,oDAA1B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAGzB,QAAMC,WAAW,GAAG;AAChB,UAAM,GADU;AAEhB,oBAAgB,MAFA;AAGhB,oBAAgB,MAHA;AAIhB,cAAU;AAJM,GAApB;AAOA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCF,QAAQ,CAACG,KAAK,CAACC,QAAP,CAAlD;;AAEA,iBAAeC,YAAf,GAA8B;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC5B,iDAD4B,EACuB;AAC/CC,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFsC;AAK7CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,WAAf;AALuC,KADvB,CAA5B;AAQA,UAAMgB,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAArB;AACAZ,IAAAA,gBAAgB,CAChBD,aAAa,IAAI;AACb,aAAO,CAAC,GAAGA,aAAJ,EAAmBY,MAAnB,CAAP;AACH,KAHe,CAAhB;AAIH;;AAKD,SACQ,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIZ,aAAa,CAACc,GAAd,CAAmBC,QAAD,IAAa;AAC3B,WACI,MAAC,YAAD;AACI,MAAA,GAAG,EAAEA,QAAQ,CAACC,EADlB;AAEI,MAAA,EAAE,EAAED,QAAQ,CAACC,EAFjB;AAGI,MAAA,IAAI,EAAED,QAAQ,CAACE,YAHnB;AAII,MAAA,IAAI,EAAEF,QAAQ,CAACG,YAJnB;AAKI,MAAA,MAAM,EAAEH,QAAQ,CAACI,MALrB;AAMI,MAAA,MAAM,EAAEJ,QAAQ,CAACK,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH,GAXD,CAFJ,EAeA,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAKtB,YAAY,CAAC,CAACD,SAAF,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAfA,EAgBA,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B,GAAEA,SAAU,EAAxC,CAhBA,CADR;AAoBH,CApDD;;AAsDAH,QAAQ,CAAC2B,eAAT,GAA2B,YAAY;AACnC,QAAMC,GAAG,GAAG,MAAMhB,KAAK,CAAC,qCAAD,CAAvB;AACA,QAAMX,IAAI,GAAG,MAAO2B,GAAG,CAACT,IAAJ,EAApB;AACA,SAAO;AAAClB,IAAAA,IAAI,EAAEA;AAAP,GAAP;AACH,CAJD;;AAOA,eAAeD,QAAf","sourcesContent":["\r\nimport OperatorsList from \"../components/operatorsListComponent/OperatorsList\"\r\n\r\nconst MainPage = ({data}) => {\r\n\r\n\r\n    const newOperator = {\r\n        \"id\": \"4\",\r\n        \"operatorName\": \"Yota\",\r\n        \"operatorLink\": \"yota\",\r\n        \"slogan\": \"ya yo ta\"\r\n    }\r\n\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [operatorsList, setOperatorsList] = useState(props.dataList);\r\n\r\n    async function handleChange() {\r\n        const response = await fetch(\r\n        'http://localhost:3000/api/operators/addOperator', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n              },\r\n              body: JSON.stringify(newOperator)\r\n        })\r\n        const result = await response.json();\r\n        setOperatorsList(\r\n        operatorsList => {\r\n            return [...operatorsList, result]\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n            <TileContainer>\r\n                {\r\n                operatorsList.map((operator)=> {\r\n                    return (\r\n                        <OperatorTile\r\n                            key={operator.id}\r\n                            id={operator.id}\r\n                            name={operator.operatorName}\r\n                            link={operator.operatorLink}\r\n                            imgUrl={operator.imgUrl}\r\n                            slogan={operator.slogan}\r\n                        />\r\n                    )\r\n                })\r\n                }\r\n            <Button onClick={()=> setIsVisible(!isVisible)}>sssss</Button>\r\n            <Test visible={isVisible}>{`${isVisible}`}</Test>\r\n        </TileContainer>\r\n    )\r\n}\r\n\r\nMainPage.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:3000/api/operators');\r\n    const data = await  res.json();\r\n    return {data: data}\r\n}\r\n\r\n\r\nexport default MainPage"]},"metadata":{},"sourceType":"module"}