{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { TileContainer, Button, Test } from \"../components/operatorsListComponent\";\nimport OperatorTile from \"../operatorTileComponent/OperatorTile\";\nimport OperatorsList from \"../components/operatorsListComponent/OperatorsList\";\n\nvar MainPage = function MainPage(_ref) {\n  _s();\n\n  var data = _ref.data;\n  console.log(data);\n  var newOperator = {\n    \"id\": \"4\",\n    \"operatorName\": \"Yota\",\n    \"operatorLink\": \"yota\",\n    \"slogan\": \"ya yo ta\"\n  };\n\n  var _useState = useState(false),\n      isVisible = _useState[0],\n      setIsVisible = _useState[1];\n\n  var _useState2 = useState(data),\n      operatorsList = _useState2[0],\n      setOperatorsList = _useState2[1];\n\n  function handleChange() {\n    return _handleChange.apply(this, arguments);\n  }\n\n  function _handleChange() {\n    _handleChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:3000/api/operators/addOperator', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json;charset=utf-8'\n                },\n                body: JSON.stringify(newOperator)\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              result = _context.sent;\n              setOperatorsList(function (operatorsList) {\n                return [].concat(_toConsumableArray(operatorsList), [result]);\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleChange.apply(this, arguments);\n  }\n\n  return __jsx(TileContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, operatorsList.map(function (operator) {\n    return __jsx(OperatorTile, {\n      key: operator.id,\n      id: operator.id,\n      name: operator.operatorName,\n      link: operator.operatorLink,\n      imgUrl: operator.imgUrl,\n      slogan: operator.slogan,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    });\n  }), __jsx(Button, {\n    onClick: function onClick() {\n      return setIsVisible(!isVisible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"sssss\"), __jsx(Test, {\n    visible: isVisible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"\".concat(isVisible)));\n};\n\n_s(MainPage, \"zihHWaYzBzbFqDTJmG+68fj5aoo=\");\n\n_c = MainPage;\nMainPage.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return fetch('http://localhost:3000/api/operators');\n\n        case 2:\n          res = _context2.sent;\n          _context2.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            data: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n}));\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/pages/index.js"],"names":["React","useState","TileContainer","Button","Test","OperatorTile","OperatorsList","MainPage","data","console","log","newOperator","isVisible","setIsVisible","operatorsList","setOperatorsList","handleChange","fetch","method","headers","body","JSON","stringify","response","json","result","map","operator","id","operatorName","operatorLink","imgUrl","slogan","getInitialProps","res"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,IAAhC,QAA4C,sCAA5C;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAGA,OAAOC,aAAP,MAA0B,oDAA1B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAY;AAAA;;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAEzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAMG,WAAW,GAAG;AAChB,UAAM,GADU;AAEhB,oBAAgB,MAFA;AAGhB,oBAAgB,MAHA;AAIhB,cAAU;AAJM,GAApB;;AAHyB,kBAUSV,QAAQ,CAAC,KAAD,CAVjB;AAAA,MAUlBW,SAVkB;AAAA,MAUPC,YAVO;;AAAA,mBAWiBZ,QAAQ,CAACO,IAAD,CAXzB;AAAA,MAWlBM,aAXkB;AAAA,MAWHC,gBAXG;;AAAA,WAaVC,YAbU;AAAA;AAAA;;AAAA;AAAA,6EAazB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC2BC,KAAK,CAC5B,iDAD4B,EACuB;AAC/CC,gBAAAA,MAAM,EAAE,MADuC;AAE/CC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBAFsC;AAK7CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,WAAf;AALuC,eADvB,CADhC;;AAAA;AACUY,cAAAA,QADV;AAAA;AAAA,qBASyBA,QAAQ,CAACC,IAAT,EATzB;;AAAA;AASUC,cAAAA,MATV;AAUIV,cAAAA,gBAAgB,CAChB,UAAAD,aAAa,EAAI;AACb,oDAAWA,aAAX,IAA0BW,MAA1B;AACH,eAHe,CAAhB;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbyB;AAAA;AAAA;;AA6BzB,SACQ,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIX,aAAa,CAACY,GAAd,CAAkB,UAACC,QAAD,EAAa;AAC3B,WACI,MAAC,YAAD;AACI,MAAA,GAAG,EAAEA,QAAQ,CAACC,EADlB;AAEI,MAAA,EAAE,EAAED,QAAQ,CAACC,EAFjB;AAGI,MAAA,IAAI,EAAED,QAAQ,CAACE,YAHnB;AAII,MAAA,IAAI,EAAEF,QAAQ,CAACG,YAJnB;AAKI,MAAA,MAAM,EAAEH,QAAQ,CAACI,MALrB;AAMI,MAAA,MAAM,EAAEJ,QAAQ,CAACK,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH,GAXD,CAFJ,EAeA,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAKnB,YAAY,CAAC,CAACD,SAAF,CAAjB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAfA,EAgBA,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA8BA,SAA9B,EAhBA,CADR;AAoBH,CAjDD;;GAAML,Q;;KAAAA,Q;AAmDNA,QAAQ,CAAC0B,eAAT,yEAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACLhB,KAAK,CAAC,qCAAD,CADA;;AAAA;AACjBiB,UAAAA,GADiB;AAAA;AAAA,iBAEHA,GAAG,CAACV,IAAJ,EAFG;;AAAA;AAEjBhB,UAAAA,IAFiB;AAAA,4CAGhB;AAACA,YAAAA,IAAI,EAAEA;AAAP,WAHgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AAOA,eAAeD,QAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { TileContainer, Button, Test } from \"../components/operatorsListComponent\";\r\nimport OperatorTile from \"../operatorTileComponent/OperatorTile\";\r\n\r\n\r\nimport OperatorsList from \"../components/operatorsListComponent/OperatorsList\"\r\n\r\nconst MainPage = ({data}) => {\r\n\r\n    console.log(data)\r\n    const newOperator = {\r\n        \"id\": \"4\",\r\n        \"operatorName\": \"Yota\",\r\n        \"operatorLink\": \"yota\",\r\n        \"slogan\": \"ya yo ta\"\r\n    }\r\n\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [operatorsList, setOperatorsList] = useState(data);\r\n\r\n    async function handleChange() {\r\n        const response = await fetch(\r\n        'http://localhost:3000/api/operators/addOperator', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n              },\r\n              body: JSON.stringify(newOperator)\r\n        })\r\n        const result = await response.json();\r\n        setOperatorsList(\r\n        operatorsList => {\r\n            return [...operatorsList, result]\r\n        });\r\n    }\r\n\r\n    return (\r\n            <TileContainer>\r\n                {\r\n                operatorsList.map((operator)=> {\r\n                    return (\r\n                        <OperatorTile\r\n                            key={operator.id}\r\n                            id={operator.id}\r\n                            name={operator.operatorName}\r\n                            link={operator.operatorLink}\r\n                            imgUrl={operator.imgUrl}\r\n                            slogan={operator.slogan}\r\n                        />\r\n                    )\r\n                })\r\n                }\r\n            <Button onClick={()=> setIsVisible(!isVisible)}>sssss</Button>\r\n            <Test visible={isVisible}>{`${isVisible}`}</Test>\r\n        </TileContainer>\r\n    )\r\n}\r\n\r\nMainPage.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:3000/api/operators');\r\n    const data = await  res.json();\r\n    return {data: data}\r\n}\r\n\r\n\r\nexport default MainPage"]},"metadata":{},"sourceType":"module"}