{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\components\\\\inputComponent\\\\FormInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Input, InputBlock } from './FormInputStyled';\nimport { useState, useEffect } from 'react';\n\nvar FormInput = function FormInput(props) {\n  _s();\n\n  //для избежания предупреждения useLayoutEffect на стороне сервера\n  var _useState = useState(false),\n      showChild = _useState[0],\n      setShowChild = _useState[1];\n\n  useEffect(function () {\n    setShowChild(true);\n  }, []);\n\n  var _useState2 = useState(false),\n      valid = _useState2[0],\n      setValid = _useState2[1];\n\n  function handleInputValue(e) {\n    if (props.regExp.test(e.target.value)) {\n      if (props.validateMethod(e.target.value)) {\n        setValid(true);\n        props.stateCallback(e.target.value);\n        console.log();\n      }\n    } else {\n      console.log(e.target.value);\n      setValid(false);\n    }\n  }\n\n  if (!showChild) {\n    return null;\n  } else return __jsx(InputBlock, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: props.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, props.labelName), __jsx(Input, {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    mask: props.mask,\n    onChange: function onChange(e) {\n      return handleInputValue(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, valid ? 'zaebis' : 'govno'));\n};\n\n_s(FormInput, \"BJIjHZEFy6woK7GpG+QoBD4hwkc=\");\n\n_c = FormInput;\nexport default FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/components/inputComponent/FormInput.js"],"names":["Input","InputBlock","useState","useEffect","FormInput","props","showChild","setShowChild","valid","setValid","handleInputValue","e","regExp","test","target","value","validateMethod","stateCallback","console","log","id","labelName","type","placeholder","mask"],"mappings":";;;;;;AAAA,SAAQA,KAAR,EAAeC,UAAf,QAAgC,mBAAhC;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AACzB;AADyB,kBAESH,QAAQ,CAAC,KAAD,CAFjB;AAAA,MAElBI,SAFkB;AAAA,MAEPC,YAFO;;AAGzBJ,EAAAA,SAAS,CAAC,YAAM;AAAEI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoB,GAA7B,EAA+B,EAA/B,CAAT;;AAHyB,mBAKCL,QAAQ,CAAC,KAAD,CALT;AAAA,MAKlBM,KALkB;AAAA,MAKXC,QALW;;AAQzB,WAASC,gBAAT,CAA0BC,CAA1B,EAA6B;AAEzB,QAAGN,KAAK,CAACO,MAAN,CAAaC,IAAb,CAAkBF,CAAC,CAACG,MAAF,CAASC,KAA3B,CAAH,EAAsC;AAClC,UAAGV,KAAK,CAACW,cAAN,CAAqBL,CAAC,CAACG,MAAF,CAASC,KAA9B,CAAH,EAAyC;AACrCN,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAJ,QAAAA,KAAK,CAACY,aAAN,CAAoBN,CAAC,CAACG,MAAF,CAASC,KAA7B;AACAG,QAAAA,OAAO,CAACC,GAAR;AACH;AACJ,KAND,MAMO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAYR,CAAC,CAACG,MAAF,CAASC,KAArB;AACAN,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;AACJ;;AAED,MAAI,CAACH,SAAL,EAAgB;AACZ,WAAO,IAAP;AACH,GAFD,MAEM,OACF,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAED,KAAK,CAACe,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2Bf,KAAK,CAACgB,SAAjC,CADJ,EAEI,MAAC,KAAD;AACI,IAAA,EAAE,EAAEhB,KAAK,CAACe,EADd;AAEI,IAAA,IAAI,EAAEf,KAAK,CAACiB,IAFhB;AAGI,IAAA,WAAW,EAAEjB,KAAK,CAACkB,WAHvB;AAII,IAAA,IAAI,EAAElB,KAAK,CAACmB,IAJhB;AAKI,IAAA,QAAQ,EAAE,kBAACb,CAAD;AAAA,aAAMD,gBAAgB,CAACC,CAAD,CAAtB;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,KAAK,GAAG,QAAH,GAAc,OAAzB,CATJ,CADE;AAaT,CArCD;;GAAMJ,S;;KAAAA,S;AAuCN,eAAeA,SAAf","sourcesContent":["import {Input, InputBlock} from './FormInputStyled';\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nconst FormInput = (props) => { \r\n    //для избежания предупреждения useLayoutEffect на стороне сервера\r\n    const [showChild, setShowChild] = useState(false);\r\n    useEffect(() => { setShowChild(true) }, []);\r\n\r\n    const [valid, setValid] = useState(false);\r\n\r\n\r\n    function handleInputValue(e) {\r\n        \r\n        if(props.regExp.test(e.target.value)) {\r\n            if(props.validateMethod(e.target.value)) {\r\n                setValid(true)\r\n                props.stateCallback(e.target.value)\r\n                console.log();\r\n            }\r\n        } else {\r\n            console.log(e.target.value);\r\n            setValid(false)\r\n        }\r\n    }\r\n\r\n    if (!showChild) {\r\n        return null;\r\n    }else return(\r\n        <InputBlock>\r\n            <label htmlFor={props.id}>{props.labelName}</label>\r\n            <Input\r\n                id={props.id}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                mask={props.mask}\r\n                onChange={(e)=> handleInputValue(e)}>\r\n            </Input>\r\n            <div>{valid ? 'zaebis' : 'govno'}</div>\r\n        </InputBlock>\r\n    )\r\n}\r\n\r\nexport default FormInput"]},"metadata":{},"sourceType":"module"}