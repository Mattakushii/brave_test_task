{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\components\\\\popupComponent\\\\Popup.tsx\";\nvar __jsx = React.createElement;\nimport { OperationResult, PopupContainer, Preloader, PreloaderText } from \"./PopupStyled\";\nimport React, { useState } from \"react\";\n\nconst Popup = props => {\n  const {\n    0: isSuccess,\n    1: setIsSuccess\n  } = useState(props.operationResult);\n  console.log(isSuccess);\n  return __jsx(PopupContainer, {\n    visible: props.popupFlag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(OperationResult, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(Preloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), __jsx(PreloaderText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, props.message)));\n};\n\nexport default Popup;","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/components/popupComponent/Popup.tsx"],"names":["OperationResult","PopupContainer","Preloader","PreloaderText","React","useState","Popup","props","isSuccess","setIsSuccess","operationResult","console","log","popupFlag","message"],"mappings":";;AAAA,SAAQA,eAAR,EAAyBC,cAAzB,EAAyCC,SAAzC,EAAoDC,aAApD,QAAwE,eAAxE;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAQA,MAAMC,KAAK,GAAIC,KAAD,IAAsB;AAChC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BJ,QAAQ,CAACE,KAAK,CAACG,eAAP,CAA1C;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,SACI,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAED,KAAK,CAACM,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBN,KAAK,CAACO,OAAtB,CAFJ,CADJ,CADJ;AAQH,CAdD;;AAgBA,eAAeR,KAAf","sourcesContent":["import {OperationResult, PopupContainer, Preloader, PreloaderText} from \"./PopupStyled\";\r\nimport React, {useState} from \"react\";\r\n\r\ninterface PopupProps {\r\n    popupFlag: boolean,\r\n    message: string,\r\n    operationResult: boolean\r\n}\r\n\r\nconst Popup = (props:PopupProps) => {\r\n    const [isSuccess, setIsSuccess] = useState(props.operationResult)\r\n\r\n    \r\n\r\n    console.log(isSuccess)\r\n    return(\r\n        <PopupContainer visible={props.popupFlag}>\r\n            <OperationResult>\r\n                <Preloader/>\r\n                <PreloaderText>{props.message}</PreloaderText>\r\n            </OperationResult>\r\n        </PopupContainer>\r\n    )\r\n}\r\n\r\nexport default Popup"]},"metadata":{},"sourceType":"module"}