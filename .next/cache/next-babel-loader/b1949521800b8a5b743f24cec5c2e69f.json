{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\components\\\\inputComponent\\\\FormInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Input, InputBlock } from './FormInputStyled';\nimport { useState, useEffect } from 'react';\n\nvar FormInput = function FormInput(props) {\n  _s();\n\n  //для избежания предупреждения useLayoutEffect на стороне сервера\n  var _useState = useState(false),\n      showChild = _useState[0],\n      setShowChild = _useState[1];\n\n  var _useState2 = useState(''),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  useEffect(function () {\n    setShowChild(true);\n  }, []);\n\n  function handleInputValue(e) {\n    setInputValue(e.target);\n  }\n\n  if (!showChild) {\n    return null;\n  } else return __jsx(InputBlock, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: props.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, props.labelName), __jsx(Input, {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    mask: props.mask,\n    onChange: props.onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"\\u043E\\u0442\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043E\\u043A\"));\n};\n\n_s(FormInput, \"RFTtN4LSKFlriVQsUWjJqEV03U8=\");\n\n_c = FormInput;\nexport default FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/components/inputComponent/FormInput.js"],"names":["Input","InputBlock","useState","useEffect","FormInput","props","showChild","setShowChild","inputValue","setInputValue","handleInputValue","e","target","id","labelName","type","placeholder","mask","onChange"],"mappings":";;;;;;AAAA,SAAQA,KAAR,EAAeC,UAAf,QAAgC,mBAAhC;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AACzB;AADyB,kBAESH,QAAQ,CAAC,KAAD,CAFjB;AAAA,MAElBI,SAFkB;AAAA,MAEPC,YAFO;;AAAA,mBAGWL,QAAQ,CAAC,EAAD,CAHnB;AAAA,MAGlBM,UAHkB;AAAA,MAGNC,aAHM;;AAIzBN,EAAAA,SAAS,CAAC,YAAM;AAAEI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoB,GAA7B,EAA+B,EAA/B,CAAT;;AAEA,WAASG,gBAAT,CAA0BC,CAA1B,EAA6B;AACzBF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAH,CAAb;AACH;;AAED,MAAI,CAACN,SAAL,EAAgB;AACZ,WAAO,IAAP;AACH,GAFD,MAEM,OACF,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAED,KAAK,CAACQ,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BR,KAAK,CAACS,SAAjC,CADJ,EAEI,MAAC,KAAD;AACI,IAAA,EAAE,EAAET,KAAK,CAACQ,EADd;AAEI,IAAA,IAAI,EAAER,KAAK,CAACU,IAFhB;AAGI,IAAA,WAAW,EAAEV,KAAK,CAACW,WAHvB;AAII,IAAA,IAAI,EAAEX,KAAK,CAACY,IAJhB;AAKI,IAAA,QAAQ,EAAEZ,KAAK,CAACa,QALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGATJ,CADE;AAaT,CAzBD;;GAAMd,S;;KAAAA,S;AA2BN,eAAeA,SAAf","sourcesContent":["import {Input, InputBlock} from './FormInputStyled';\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nconst FormInput = (props) => { \r\n    //для избежания предупреждения useLayoutEffect на стороне сервера\r\n    const [showChild, setShowChild] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n    useEffect(() => { setShowChild(true) }, []);\r\n\r\n    function handleInputValue(e) {\r\n        setInputValue(e.target)\r\n    }\r\n\r\n    if (!showChild) {\r\n        return null;\r\n    }else return(\r\n        <InputBlock>\r\n            <label htmlFor={props.id}>{props.labelName}</label>\r\n            <Input\r\n                id={props.id}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                mask={props.mask}\r\n                onChange={props.onChange}>\r\n            </Input>\r\n            <div>отработка ошибок</div>\r\n        </InputBlock>\r\n    )\r\n}\r\n\r\nexport default FormInput"]},"metadata":{},"sourceType":"module"}