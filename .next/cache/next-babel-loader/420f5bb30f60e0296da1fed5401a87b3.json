{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\pages\\\\pay\\\\[payOperatorID].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\n\nconst PaymentPage = () => {\n  const router = useRouter();\n  const {\n    payOperatorID\n  } = router.query;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430 \", payOperatorID), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }));\n};\n\nPaymentPage.getInitialProps = async ctx => {\n  console.log(_objectSpread({}, ctx.query));\n  return {};\n};\n\nexport default PaymentPage;","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/pages/pay/[payOperatorID].js"],"names":["useRouter","PaymentPage","router","payOperatorID","query","getInitialProps","ctx","console","log"],"mappings":";;;;;;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;;AAGA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAoBD,MAAM,CAACE,KAAjC;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAaD,aAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAQH,CAXD;;AAaAF,WAAW,CAACI,eAAZ,GAA8B,MAAOC,GAAP,IAAe;AACzCC,EAAAA,OAAO,CAACC,GAAR,mBAAgBF,GAAG,CAACF,KAApB;AACA,SAAO,EAAP;AACH,CAHD;;AAKA,eAAeH,WAAf","sourcesContent":["import {useRouter} from 'next/router'\r\n\r\n\r\nconst PaymentPage = () => {\r\n    const router = useRouter();\r\n    const { payOperatorID } = router.query;\r\n    return (\r\n        <div>\r\n            <h1>Оплата { payOperatorID }</h1>\r\n            <form>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nPaymentPage.getInitialProps = async (ctx) => {\r\n    console.log({...ctx.query})\r\n    return {}\r\n}\r\n\r\nexport default PaymentPage"]},"metadata":{},"sourceType":"module"}