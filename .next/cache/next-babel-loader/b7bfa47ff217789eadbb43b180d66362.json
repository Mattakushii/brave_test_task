{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { TileContainer } from \"../components/OperatorsListStyled\";\nimport OperatorTile from \"../components/operatorTileComponent/OperatorTile\";\n\nconst MainPage = ({\n  data\n}) => {\n  const {\n    0: operatorsList,\n    1: setOperatorsList\n  } = useState(data);\n  return __jsx(Scrollbars, {\n    universal: true,\n    autoHeight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(TileContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, operatorsList === null || operatorsList === void 0 ? void 0 : operatorsList.map((operator, index) => {\n    return __jsx(OperatorTile, {\n      key: index,\n      id: operator.id,\n      name: operator.operatorName,\n      link: operator.operatorLink,\n      imgUrl: operator.imgUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 29\n      }\n    });\n  })));\n};\n\nMainPage.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/operators');\n  const data = await res.json();\n  return {\n    data: data\n  };\n};\n\nexport default MainPage;","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/pages/index.tsx"],"names":["React","useState","Scrollbars","TileContainer","OperatorTile","MainPage","data","operatorsList","setOperatorsList","map","operator","index","id","operatorName","operatorLink","imgUrl","getInitialProps","res","fetch","json"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,OAAOC,YAAP,MAAyB,kDAAzB;;AAMA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA4B;AACzC,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCP,QAAQ,CAACK,IAAD,CAAlD;AAEA,SACI,MAAC,UAAD;AAAY,IAAA,SAAS,MAArB;AAAsB,IAAA,UAAU,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,aAFR,aAEQA,aAFR,uBAEQA,aAAa,CAAEE,GAAf,CAAmB,CAACC,QAAD,EAA2BC,KAA3B,KAA4C;AAC3D,WACI,MAAC,YAAD;AACI,MAAA,GAAG,EAAEA,KADT;AAEI,MAAA,EAAE,EAAED,QAAQ,CAACE,EAFjB;AAGI,MAAA,IAAI,EAAEF,QAAQ,CAACG,YAHnB;AAII,MAAA,IAAI,EAAEH,QAAQ,CAACI,YAJnB;AAKI,MAAA,MAAM,EAAEJ,QAAQ,CAACK,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH,GAVD,CAFR,CADJ,CADJ;AAoBH,CAvBD;;AAgCAV,QAAQ,CAACW,eAAT,GAA2B,YAAY;AACnC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAAvB;AACA,QAAMZ,IAAuC,GAAI,MAAOW,GAAG,CAACE,IAAJ,EAAxD;AACA,SAAO;AAACb,IAAAA,IAAI,EAAEA;AAAP,GAAP;AACH,CAJD;;AAMA,eAAeD,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { TileContainer } from \"../components/OperatorsListStyled\";\r\nimport OperatorTile from \"../components/operatorTileComponent/OperatorTile\";\r\n\r\ninterface MainPageProps {\r\n    data: OperatorsList[] | undefined\r\n}\r\n\r\nconst MainPage = ({data} : MainPageProps) => {\r\n    const [operatorsList, setOperatorsList] = useState(data);\r\n\r\n    return (\r\n        <Scrollbars universal autoHeight>\r\n            <TileContainer>\r\n                {\r\n                    operatorsList?.map((operator : OperatorsList, index: number)=> {\r\n                        return (\r\n                            <OperatorTile\r\n                                key={index}\r\n                                id={operator.id}\r\n                                name={operator.operatorName}\r\n                                link={operator.operatorLink}\r\n                                imgUrl={operator.imgUrl}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n\r\n        </TileContainer>\r\n    </Scrollbars>\r\n    )\r\n}\r\n\r\nexport interface OperatorsList {\r\n    id: string,\r\n    operatorName: string,\r\n    operatorLink: string,\r\n    imgUrl?: string\r\n}\r\n\r\nMainPage.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:3000/api/operators');\r\n    const data : Array<OperatorsList> | undefined  = await  res.json();\r\n    return {data: data}\r\n}\r\n\r\nexport default MainPage"]},"metadata":{},"sourceType":"module"}