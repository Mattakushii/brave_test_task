{"ast":null,"code":"import db from \"../../../../public/db.json\";\nexport default function personHandler({\n  query: {\n    operatorLink\n  }\n}, res) {\n  const filtered = db.filter(p => p.operatorLink === operatorLink);\n\n  if (filtered.length > 0) {\n    setTimeout(() => {\n      res.status(200).json(filtered[0]);\n    }, 500);\n  } else {\n    setTimeout(() => {\n      res.status(200).json(filtered[0]);\n    }, 500);\n    res.status(404).json({\n      message: `Operator with name: ${operatorLink} not found.`\n    });\n  }\n}","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/pages/api/operators/[operatorLink].js"],"names":["db","personHandler","query","operatorLink","res","filtered","filter","p","length","setTimeout","status","json","message"],"mappings":"AAAA,OAAOA,EAAP,MAAe,4BAAf;AAEA,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,CAAvB,EAAoDC,GAApD,EAAyD;AACtE,QAAMC,QAAQ,GAAGL,EAAE,CAACM,MAAH,CAAWC,CAAD,IAAOA,CAAC,CAACJ,YAAF,KAAmBA,YAApC,CAAjB;;AAEA,MAAIE,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACvBC,IAAAA,UAAU,CAAC,MAAK;AACdL,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,QAAQ,CAAC,CAAD,CAA7B;AACD,KAFS,EAEP,GAFO,CAAV;AAID,GALD,MAKO;AACLI,IAAAA,UAAU,CAAC,MAAK;AACdL,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,QAAQ,CAAC,CAAD,CAA7B;AACD,KAFS,EAEP,GAFO,CAAV;AAGAD,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAG,uBAAsBT,YAAa;AAA/C,KAArB;AACD;AACF","sourcesContent":["import db from \"../../../../public/db.json\";\r\n\r\nexport default function personHandler({ query: { operatorLink } }, res) {\r\n  const filtered = db.filter((p) => p.operatorLink === operatorLink)\r\n\r\n  if (filtered.length > 0) {\r\n    setTimeout(()=> {\r\n      res.status(200).json(filtered[0])\r\n    }, 500)\r\n    \r\n  } else {\r\n    setTimeout(()=> {\r\n      res.status(200).json(filtered[0])\r\n    }, 500)\r\n    res.status(404).json({ message: `Operator with name: ${operatorLink} not found.` })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}