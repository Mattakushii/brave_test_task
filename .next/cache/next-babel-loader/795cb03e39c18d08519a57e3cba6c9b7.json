{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\pages\\\\pay\\\\[payOperatorID].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nconst PaymentPage = ({\n  data\n}) => {\n  if (data && data.id) {\n    return __jsx(React.Fragment, null, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430 \", data.operatorName), __jsx(\"form\", {\n      method: \"POST\",\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 25\n      }\n    }, \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"), __jsx(\"input\", {\n      id: \"phone\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }\n    }, \"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u043F\\u043B\\u0430\\u0442\\u0435\\u0436\\u0430\"), __jsx(\"input\", {\n      id: \"payment\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }\n    })), __jsx(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }, \"go\")));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, data.errmessage);\n  }\n};\n\nPaymentPage.getInitialProps = async ctx => {\n  const res = await fetch(`http://localhost:3000/api/operators/${ctx.query.payOperatorID}`);\n  const data = await res.json();\n  return {\n    data\n  };\n};\n\nexport default PaymentPage;","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/pages/pay/[payOperatorID].js"],"names":["PaymentPage","data","id","operatorName","errmessage","getInitialProps","ctx","res","fetch","query","payOperatorID","json"],"mappings":";;;;AACA,MAAMA,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC5B,MAAGA,IAAI,IAAIA,IAAI,CAACC,EAAhB,EAAoB;AAChB,WACI,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAYD,IAAI,CAACE,YAAjB,CADA,EAEI;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,MAAM,EAAC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFADJ,EAEI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,IAAI,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFADJ,EAEI;AAAO,MAAA,EAAE,EAAC,SAAV;AAAoB,MAAA,IAAI,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,CAFJ,CADJ;AAgBH,GAjBD,MAiBO;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACG,UAAV,CAAP;AACC;AACJ,CArBD;;AAuBAJ,WAAW,CAACK,eAAZ,GAA8B,MAAOC,GAAP,IAAe;AACzC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,uCAAsCF,GAAG,CAACG,KAAJ,CAAUC,aAAc,EAAhE,CAAvB;AACA,QAAMT,IAAI,GAAG,MAAMM,GAAG,CAACI,IAAJ,EAAnB;AACA,SAAO;AAAEV,IAAAA;AAAF,GAAP;AACH,CAJD;;AAMA,eAAeD,WAAf","sourcesContent":["\r\nconst PaymentPage = ({data}) => {\r\n    if(data && data.id) {\r\n        return (\r\n            <>  \r\n            <h1>Оплата {data.operatorName}</h1>    \r\n                <form method=\"POST\" action=\"\">\r\n                    <div>\r\n                        <label htmlFor=\"phone\">Номер телефона</label>\r\n                        <input id=\"phone\" type=\"text\"></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"payment\">Сумма платежа</label>\r\n                        <input id=\"payment\" type=\"text\"></input>    \r\n                    </div>\r\n                    <button>go</button>\r\n                </form>\r\n            </>\r\n        )\r\n    } else {\r\n    return <h1>{data.errmessage}</h1>\r\n    }\r\n}\r\n\r\nPaymentPage.getInitialProps = async (ctx) => {\r\n    const res = await fetch(`http://localhost:3000/api/operators/${ctx.query.payOperatorID}`);\r\n    const data = await res.json();\r\n    return { data }\r\n}\r\n\r\nexport default PaymentPage"]},"metadata":{},"sourceType":"module"}