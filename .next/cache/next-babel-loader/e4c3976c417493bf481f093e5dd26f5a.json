{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\pages\\\\pay\\\\[payOperatorID].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\n\nvar PaymentPage = function PaymentPage() {\n  _s();\n\n  var router = useRouter();\n  var payOperatorID = router.query.payOperatorID;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430 \", payOperatorID), __jsx(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(PaymentPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = PaymentPage;\n\nPaymentPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(ctx.query);\n            return _context.abrupt(\"return\", []);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default PaymentPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/pages/pay/[payOperatorID].js"],"names":["useRouter","PaymentPage","router","payOperatorID","query","getInitialProps","ctx","console","log"],"mappings":";;;;;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACtB,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AADsB,MAEdG,aAFc,GAEID,MAAM,CAACE,KAFX,CAEdD,aAFc;AAGtB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAaA,aAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAQH,CAXD;;GAAMF,W;UACaD,S;;;KADbC,W;;AAaNA,WAAW,CAACI,eAAZ;AAAA,sEAA8B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAC1BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACF,KAAhB;AAD0B,6CAEnB,EAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeH,WAAf","sourcesContent":["import {useRouter} from 'next/router'\r\n\r\n\r\nconst PaymentPage = () => {\r\n    const router = useRouter();\r\n    const { payOperatorID } = router.query;\r\n    return (\r\n        <div>\r\n            <h1>Оплата { payOperatorID }</h1>\r\n            <form>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nPaymentPage.getInitialProps = async (ctx) => {\r\n    console.log(ctx.query)\r\n    return []\r\n}\r\n\r\nexport default PaymentPage"]},"metadata":{},"sourceType":"module"}