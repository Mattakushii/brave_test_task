{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\components\\\\operatorsListComponent\\\\OperatorsList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { TileContainer, Button } from \"./OperatorsListStyled\";\nimport OperatorTile from \"../operatorTileComponent/OperatorTile\";\n\nvar OperatorsList = function OperatorsList(_ref) {\n  _s();\n\n  var props = _extends({}, _ref);\n\n  var newOperator = {\n    \"id\": \"4\",\n    \"operatorName\": \"Yota\",\n    \"operatorLink\": \"yota\",\n    \"slogan\": \"ya yo ta\"\n  };\n\n  var _useState = useState(props.dataList),\n      operatorsList = _useState[0],\n      setOperatorsList = _useState[1];\n\n  function handleChange(_x, _x2) {\n    return _handleChange.apply(this, arguments);\n  }\n\n  function _handleChange() {\n    _handleChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res, ree) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setOperatorsList(function (operatorsList) {\n                return [].concat(_toConsumableArray(operatorsList), [newOperator]);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleChange.apply(this, arguments);\n  }\n\n  return __jsx(TileContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, operatorsList.map(function (operator) {\n    return __jsx(OperatorTile, {\n      key: operator.id,\n      id: operator.id,\n      name: operator.operatorName,\n      link: operator.operatorLink,\n      imgUrl: operator.imgUrl,\n      slogan: operator.slogan,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    });\n  }), __jsx(Button, {\n    onClick: function onClick() {\n      return handleChange();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"+++\"));\n};\n\n_s(OperatorsList, \"qTOSfvHqBOF2APwUDpmP6tb50mY=\");\n\n_c = OperatorsList;\nexport default OperatorsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OperatorsList\");","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/components/operatorsListComponent/OperatorsList.js"],"names":["React","useState","TileContainer","Button","OperatorTile","OperatorsList","props","newOperator","dataList","operatorsList","setOperatorsList","handleChange","res","ree","map","operator","id","operatorName","operatorLink","imgUrl","slogan"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,MAAxB,QAAsC,uBAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAgB;AAAA;;AAAA,MAAXC,KAAW;;AAClC,MAAMC,WAAW,GAAG;AAChB,UAAM,GADU;AAEhB,oBAAgB,MAFA;AAGhB,oBAAgB,MAHA;AAIhB,cAAU;AAJM,GAApB;;AADkC,kBAQQN,QAAQ,CAACK,KAAK,CAACE,QAAP,CARhB;AAAA,MAQ3BC,aAR2B;AAAA,MAQZC,gBARY;;AAAA,WAUnBC,YAVmB;AAAA;AAAA;;AAAA;AAAA,6EAUlC,iBAA4BC,GAA5B,EAAiCC,GAAjC;AAAA;AAAA;AAAA;AAAA;AACIH,cAAAA,gBAAgB,CAChB,UAAAD,aAAa,EAAI;AACb,oDAAWA,aAAX,IAA0BF,WAA1B;AACH,eAHe,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVkC;AAAA;AAAA;;AAiB/B,SACC,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,aAAa,CAACK,GAAd,CAAkB,UAACC,QAAD,EAAa;AAC3B,WACI,MAAC,YAAD;AACI,MAAA,GAAG,EAAEA,QAAQ,CAACC,EADlB;AAEI,MAAA,EAAE,EAAED,QAAQ,CAACC,EAFjB;AAGI,MAAA,IAAI,EAAED,QAAQ,CAACE,YAHnB;AAII,MAAA,IAAI,EAAEF,QAAQ,CAACG,YAJnB;AAKI,MAAA,MAAM,EAAEH,QAAQ,CAACI,MALrB;AAMI,MAAA,MAAM,EAAEJ,QAAQ,CAACK,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH,GAXD,CAFR,EAeI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAKT,YAAY,EAAjB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAfJ,CADD;AAmBN,CApCD;;GAAMN,a;;KAAAA,a;AAuCN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { TileContainer, Button } from \"./OperatorsListStyled\";\r\nimport OperatorTile from \"../operatorTileComponent/OperatorTile\";\r\n\r\nconst OperatorsList = ({...props}) => {\r\n    const newOperator = {\r\n        \"id\": \"4\",\r\n        \"operatorName\": \"Yota\",\r\n        \"operatorLink\": \"yota\",\r\n        \"slogan\": \"ya yo ta\"\r\n    }\r\n\r\n    const [operatorsList, setOperatorsList] = useState(props.dataList);\r\n\r\n    async function handleChange(res, ree) {\r\n        setOperatorsList(\r\n        operatorsList => {\r\n            return [...operatorsList, newOperator]\r\n        });\r\n    }\r\n\r\n       return(\r\n        <TileContainer>\r\n                {\r\n                operatorsList.map((operator)=> {\r\n                    return (\r\n                        <OperatorTile\r\n                            key={operator.id}\r\n                            id={operator.id}\r\n                            name={operator.operatorName}\r\n                            link={operator.operatorLink}\r\n                            imgUrl={operator.imgUrl}\r\n                            slogan={operator.slogan}\r\n                        />\r\n                    )\r\n                })\r\n                }\r\n            <Button onClick={()=> handleChange()}>+++</Button>\r\n        </TileContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default OperatorsList"]},"metadata":{},"sourceType":"module"}