{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\pages\\\\pay\\\\[payOperatorID].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { PaymentContainer, Input, InputBlock } from '../../components/PaymentPageStyled';\n\nconst PaymentPage = ({\n  data\n}) => {\n  const {\n    0: phone,\n    1: setPhone\n  } = useState('');\n  const {\n    0: payment,\n    1: setPayment\n  } = useState('');\n  const {\n    0: showChild,\n    1: setShowChild\n  } = useState(false);\n\n  function sendData(e) {\n    e.preventDefault();\n    console.log(phone, payment);\n  }\n\n  function handlePhoneChange(e) {\n    setPhone(e.target.value);\n  }\n\n  function handlePaymentChange(e) {\n    setPayment(e.target.value);\n  }\n\n  useEffect(() => {\n    setShowChild(true);\n  }, []);\n\n  if (!showChild) {\n    return nulq;\n  } else if (data && data.id) {\n    return __jsx(PaymentContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430 \", data.operatorName), __jsx(\"form\", {\n      method: \"POST\",\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, __jsx(InputBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"), __jsx(Input, {\n      mask: \"+7(999)999-99-99\",\n      id: \"phone\",\n      type: \"text\",\n      onChange: e => {\n        handlePhoneChange(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    })), __jsx(InputBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u043F\\u043B\\u0430\\u0442\\u0435\\u0436\\u0430\"), __jsx(Input, {\n      mask: \"9999\",\n      id: \"payment\",\n      type: \"text\",\n      onChange: e => {\n        handlePaymentChange(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    })), __jsx(\"button\", {\n      onClick: e => {\n        sendData(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"go\")));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    }, data.errMessage);\n  }\n};\n\nPaymentPage.getInitialProps = async ctx => {\n  const res = await fetch(`http://localhost:3000/api/operators/${ctx.query.payOperatorID}`);\n  const data = await res.json();\n  return {\n    data\n  };\n};\n\nexport default PaymentPage;","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/pages/pay/[payOperatorID].js"],"names":["useState","useEffect","PaymentContainer","Input","InputBlock","PaymentPage","data","phone","setPhone","payment","setPayment","showChild","setShowChild","sendData","e","preventDefault","console","log","handlePhoneChange","target","value","handlePaymentChange","nulq","id","operatorName","errMessage","getInitialProps","ctx","res","fetch","query","payOperatorID","json"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'; \r\nimport {PaymentContainer, Input, InputBlock} from '../../components/PaymentPageStyled';\r\n\r\nconst PaymentPage = ({data}) => {\r\n\r\n    const [phone, setPhone] = useState('');\r\n    const [payment, setPayment] = useState('');\r\n    const [showChild, setShowChild] = useState(false);\r\n\r\n    function sendData(e) {\r\n        e.preventDefault()\r\n        console.log(phone, payment);\r\n    }\r\n\r\n    function handlePhoneChange(e) {\r\n        setPhone(e.target.value)\r\n    }\r\n\r\n    function handlePaymentChange(e) {\r\n        setPayment(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setShowChild(true);\r\n    }, []);\r\n\r\n    if (!showChild) {\r\n    return nulq;\r\n    }else if (data && data.id) {\r\n        return (\r\n            <PaymentContainer>  \r\n                <h1>Оплата {data.operatorName}</h1>    \r\n                <form method=\"POST\" action=\"\">\r\n                    <InputBlock>\r\n                        <label htmlFor=\"phone\">Номер телефона</label>\r\n                        <Input \r\n                            mask=\"+7(999)999-99-99\" \r\n                            id=\"phone\" \r\n                            type=\"text\" \r\n                            onChange={(e)=>{handlePhoneChange(e)}}>\r\n                        </Input>\r\n                        <span></span>\r\n                    </InputBlock>\r\n                    <InputBlock>\r\n                        <label htmlFor=\"payment\">Сумма платежа</label>\r\n                        <Input \r\n                            mask=\"9999\" \r\n                            id=\"payment\" \r\n                            type=\"text\"\r\n                            onChange={(e)=>{handlePaymentChange(e)}}>      \r\n                        </Input>\r\n                        <span></span>    \r\n                    </InputBlock>\r\n                    <button onClick={(e)=> {sendData(e)}}>go</button>\r\n                </form>\r\n            </PaymentContainer>\r\n        )\r\n    } else {\r\n    return <h1>{data.errMessage}</h1>\r\n    }\r\n}\r\n\r\nPaymentPage.getInitialProps = async (ctx) => {\r\n    const res = await fetch(`http://localhost:3000/api/operators/${ctx.query.payOperatorID}`);\r\n    const data = await res.json();\r\n    return { data }\r\n}\r\n\r\nexport default PaymentPage"]},"metadata":{},"sourceType":"module"}