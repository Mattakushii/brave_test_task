{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\components\\\\inputComponent\\\\FormInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Input, InputBlock } from './FormInputStyled';\nimport { useState, useEffect } from 'react'; // id mask pattern placeholder type callback\n\nvar FormInput = function FormInput() {\n  _s();\n\n  //для избежания предупреждения useLayoutEffect на стороне сервера\n  var _useState = useState(false),\n      showChild = _useState[0],\n      setShowChild = _useState[1];\n\n  useEffect(function () {\n    setShowChild(true);\n  }, []);\n\n  for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n    props[_key] = arguments[_key];\n  }\n\n  console.log(props);\n\n  if (!showChild) {\n    return null;\n  } else return __jsx(InputBlock, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: props.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"), __jsx(Input, {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    pattern: props.pattern,\n    mask: props.mask,\n    onChange: pe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"\\u043E\\u0442\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043E\\u043A\"));\n};\n\n_s(FormInput, \"OPzvfNNxsdCqaevHXa2v7NfkpUQ=\");\n\n_c = FormInput;\nexport default FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/components/inputComponent/FormInput.js"],"names":["Input","InputBlock","useState","useEffect","FormInput","showChild","setShowChild","props","console","log","id","type","placeholder","pattern","mask","pe"],"mappings":";;;;;;AAAA,SAAQA,KAAR,EAAeC,UAAf,QAAgC,mBAAhC;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC,C,CAEA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAc;AAAA;;AAC5B;AAD4B,kBAEMF,QAAQ,CAAC,KAAD,CAFd;AAAA,MAErBG,SAFqB;AAAA,MAEVC,YAFU;;AAG5BH,EAAAA,SAAS,CAAC,YAAM;AAAEG,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoB,GAA7B,EAA+B,EAA/B,CAAT;;AAH4B,oCAAVC,KAAU;AAAVA,IAAAA,KAAU;AAAA;;AAKxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACJ,MAAI,CAACF,SAAL,EAAgB;AACZ,WAAO,IAAP;AACH,GAFD,MAEM,OACF,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAEE,KAAK,CAACG,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFADJ,EAEI,MAAC,KAAD;AACI,IAAA,EAAE,EAAEH,KAAK,CAACG,EADd;AAEI,IAAA,IAAI,EAAEH,KAAK,CAACI,IAFhB;AAGI,IAAA,WAAW,EAAEJ,KAAK,CAACK,WAHvB;AAII,IAAA,OAAO,EAAEL,KAAK,CAACM,OAJnB;AAKI,IAAA,IAAI,EAAEN,KAAK,CAACO,IALhB;AAMI,IAAA,QAAQ,EAAEC,EANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGAVJ,CADE;AAcT,CAtBD;;GAAMX,S;;KAAAA,S;AAwBN,eAAeA,SAAf","sourcesContent":["import {Input, InputBlock} from './FormInputStyled';\r\nimport {useState, useEffect} from 'react';\r\n\r\n// id mask pattern placeholder type callback\r\n\r\nconst FormInput = (...props) => { \r\n    //для избежания предупреждения useLayoutEffect на стороне сервера\r\n    const [showChild, setShowChild] = useState(false);\r\n    useEffect(() => { setShowChild(true) }, []);\r\n\r\n        console.log(props)\r\n    if (!showChild) {\r\n        return null;\r\n    }else return(\r\n        <InputBlock>\r\n            <label htmlFor={props.id}>Номер телефона</label>\r\n            <Input\r\n                id={props.id}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                pattern={props.pattern} \r\n                mask={props.mask}\r\n                onChange={pe}>\r\n            </Input>\r\n            <div>отработка ошибок</div>\r\n        </InputBlock>\r\n    )\r\n}\r\n\r\nexport default FormInput"]},"metadata":{},"sourceType":"module"}