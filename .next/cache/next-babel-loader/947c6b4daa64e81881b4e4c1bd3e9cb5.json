{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\components\\\\paymentScreen\\\\Payment.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nconst Payment = (_ref) => {\n  let props = Object.assign({}, _ref);\n\n  if (props && props.data.id) {\n    return __jsx(React.Fragment, null, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430 \", props.data.operatorName), __jsx(\"form\", {\n      method: \"POST\",\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 21\n      }\n    }, \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"), __jsx(\"input\", {\n      id: \"phone\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 21\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }\n    }, \"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u043F\\u043B\\u0430\\u0442\\u0435\\u0436\\u0430\"), __jsx(\"input\", {\n      id: \"payment\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }\n    }), __jsx(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }\n    }, \"go\")));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }\n    }, \"404\");\n  }\n};\n\nexport default Payment;","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/components/paymentScreen/Payment.js"],"names":["Payment","props","data","id","operatorName"],"mappings":";;;;AAAA,MAAMA,OAAO,GAAG,UAAgB;AAAA,MAAXC,KAAW;;AAC5B,MAAGA,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,EAAvB,EAA2B;AACvB,WACI,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAYF,KAAK,CAACC,IAAN,CAAWE,YAAvB,CADA,EAEI;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,MAAM,EAAC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFADJ,EAEI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,IAAI,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAHJ,EAII;AAAO,MAAA,EAAE,EAAC,SAAV;AAAoB,MAAA,IAAI,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,CAFJ,CADJ;AAYH,GAbD,MAaO;AACH,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;AACJ,CAjBD;;AAmBA,eAAeJ,OAAf","sourcesContent":["const Payment = ({...props}) => {\r\n    if(props && props.data.id) {\r\n        return (\r\n            <>  \r\n            <h1>Оплата {props.data.operatorName}</h1>    \r\n                <form method=\"POST\" action=\"\">\r\n                    <label htmlFor=\"phone\">Номер телефона</label>\r\n                    <input id=\"phone\" type=\"text\"></input>\r\n                    <label htmlFor=\"payment\">Сумма платежа</label>\r\n                    <input id=\"payment\" type=\"text\"></input>\r\n                    <button>go</button>\r\n                </form>\r\n            </>\r\n        )\r\n    } else {\r\n        return <h1>404</h1>\r\n    }\r\n}\r\n\r\nexport default Payment"]},"metadata":{},"sourceType":"module"}