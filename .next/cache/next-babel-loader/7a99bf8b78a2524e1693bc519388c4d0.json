{"ast":null,"code":"export default function payHandler(req, res) {\n  switch (req.method) {\n    case 'POST':\n      if (req.body.phoneNumber && req.body.payment && req.body.operatorName) {\n        const randRes = randomInteger(0, 1);\n\n        if (randRes) {\n          res.status(200).json({\n            result: true,\n            message: `Успешно!`\n          });\n        } else {\n          res.status(404).json({\n            result: false,\n            message: `Кажется, что то пошло не так..(`\n          });\n        }\n      } else {\n        res.status(404).json({\n          result: false,\n          message: `Invalid data`\n        });\n      }\n\n      break;\n\n    default:\n      {\n        res.status(405).json({\n          result: false,\n          message: `${req.method} not allowed`\n        });\n        break;\n      }\n  }\n}\n\nfunction randomInteger(min, max) {\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\n  return Math.round(rand);\n}","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/pages/api/pay/index.js"],"names":["payHandler","req","res","method","body","phoneNumber","payment","operatorName","randRes","randomInteger","status","json","result","message","min","max","rand","Math","random","round"],"mappings":"AAAA,eAAe,SAASA,UAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AACzC,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,MAAL;AACI,UAAGF,GAAG,CAACG,IAAJ,CAASC,WAAT,IAAwBJ,GAAG,CAACG,IAAJ,CAASE,OAAjC,IAA4CL,GAAG,CAACG,IAAJ,CAASG,YAAxD,EAAsE;AAClE,cAAMC,OAAO,GAAIC,aAAa,CAAC,CAAD,EAAI,CAAJ,CAA9B;;AACA,YAAGD,OAAH,EAAY;AACRN,UAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,YAAAA,MAAM,EAAE,IADS;AAEjBC,YAAAA,OAAO,EAAG;AAFO,WAArB;AAIH,SALD,MAKO;AACHX,UAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,YAAAA,MAAM,EAAE,KADS;AAEjBC,YAAAA,OAAO,EAAG;AAFO,WAArB;AAIH;AACJ,OAbD,MAaO;AACHX,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,KADS;AAEjBC,UAAAA,OAAO,EAAG;AAFO,SAArB;AAIH;;AACD;;AACJ;AAAS;AACLX,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,KADS;AAEjBC,UAAAA,OAAO,EAAG,GAAEZ,GAAG,CAACE,MAAO;AAFN,SAArB;AAGA;AACH;AA3BL;AA6BH;;AAED,SAASM,aAAT,CAAuBK,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7B,MAAIC,IAAI,GAAGF,GAAG,GAAG,GAAN,GAAYG,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAvB;AACA,SAAOG,IAAI,CAACE,KAAL,CAAWH,IAAX,CAAP;AACH","sourcesContent":["export default function payHandler(req, res) {\r\n    switch (req.method) {\r\n        case 'POST':\r\n            if(req.body.phoneNumber && req.body.payment && req.body.operatorName) {\r\n                const randRes =  randomInteger(0, 1);\r\n                if(randRes) {\r\n                    res.status(200).json({\r\n                        result: true,\r\n                        message: `Успешно!`\r\n                    });\r\n                } else {\r\n                    res.status(404).json({\r\n                        result: false,\r\n                        message: `Кажется, что то пошло не так..(`\r\n                    });\r\n                }\r\n            } else {\r\n                res.status(404).json({\r\n                    result: false,\r\n                    message: `Invalid data`\r\n                });\r\n            }\r\n            break;\r\n        default: {\r\n            res.status(405).json({\r\n                result: false,\r\n                message: `${req.method} not allowed`});\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction randomInteger(min, max) {\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    return Math.round(rand);\r\n}"]},"metadata":{},"sourceType":"module"}