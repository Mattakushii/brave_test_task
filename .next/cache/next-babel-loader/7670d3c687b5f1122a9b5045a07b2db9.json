{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\GitHub\\\\brave_test_task\\\\src\\\\pages\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { TileContainer } from \"../components/OperatorsListStyled\";\nimport OperatorTile from \"../components/operatorTileComponent/OperatorTile\";\n\nvar MainPage = function MainPage(_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  //исправить все стили\n  var _useState = useState(data),\n      operatorsList = _useState[0],\n      setOperatorsList = _useState[1];\n\n  console.log(operatorsList);\n  return __jsx(TileContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, operatorsList === null || operatorsList === void 0 ? void 0 : operatorsList.map(function (operator, index) {\n    return __jsx(OperatorTile, {\n      key: index,\n      id: operator.id,\n      name: operator.operatorName,\n      link: operator.operatorLink,\n      imgUrl: operator.imgUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    });\n  }));\n};\n\n_s(MainPage, \"1OzzvyZ8YRNtspudo72OQFNenqA=\");\n\n_c = MainPage;\nMainPage.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('http://localhost:3000/api/operators');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["C:/GitHub/brave_test_task/src/pages/index.tsx"],"names":["React","useState","TileContainer","OperatorTile","MainPage","data","operatorsList","setOperatorsList","console","log","map","operator","index","id","operatorName","operatorLink","imgUrl","getInitialProps","fetch","res","json"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,OAAOC,YAAP,MAAyB,kDAAzB;;AAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA4B;AAAA;;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;;AACzC;AADyC,kBAECJ,QAAQ,CAACI,IAAD,CAFT;AAAA,MAElCC,aAFkC;AAAA,MAEnBC,gBAFmB;;AAIzCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AAEA,SACQ,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,aAFJ,aAEIA,aAFJ,uBAEIA,aAAa,CAAEI,GAAf,CAAmB,UAACC,QAAD,EAA2BC,KAA3B,EAA4C;AAC3D,WACI,MAAC,YAAD;AACI,MAAA,GAAG,EAAEA,KADT;AAEI,MAAA,EAAE,EAAED,QAAQ,CAACE,EAFjB;AAGI,MAAA,IAAI,EAAEF,QAAQ,CAACG,YAHnB;AAII,MAAA,IAAI,EAAEH,QAAQ,CAACI,YAJnB;AAKI,MAAA,MAAM,EAAEJ,QAAQ,CAACK,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH,GAVD,CAFJ,CADR;AAiBH,CAvBD;;GAAMZ,Q;;KAAAA,Q;AAgCNA,QAAQ,CAACa,eAAT,yEAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACLC,KAAK,CAAC,qCAAD,CADA;;AAAA;AACjBC,UAAAA,GADiB;AAAA;AAAA,iBAEiCA,GAAG,CAACC,IAAJ,EAFjC;;AAAA;AAEjBf,UAAAA,IAFiB;AAGvBG,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAHuB,2CAIhB;AAACA,YAAAA,IAAI,EAAEA;AAAP,WAJgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AAOA,eAAeD,QAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { TileContainer } from \"../components/OperatorsListStyled\";\r\nimport OperatorTile from \"../components/operatorTileComponent/OperatorTile\";\r\n\r\ninterface MainPageProps {\r\n    data: OperatorsList | undefined\r\n}\r\n\r\nconst MainPage = ({data} : MainPageProps) => {\r\n    //исправить все стили\r\n    const [operatorsList, setOperatorsList] = useState(data);\r\n\r\n    console.log(operatorsList)\r\n\r\n    return (\r\n            <TileContainer>\r\n                {\r\n                operatorsList?.map((operator : OperatorsList, index: number)=> {\r\n                    return (\r\n                        <OperatorTile\r\n                            key={index}\r\n                            id={operator.id}\r\n                            name={operator.operatorName}\r\n                            link={operator.operatorLink}\r\n                            imgUrl={operator.imgUrl}\r\n                        />\r\n                    )\r\n                })\r\n                }\r\n        </TileContainer>\r\n    )\r\n}\r\n\r\nexport interface OperatorsList {\r\n    id: string,\r\n    operatorName: string,\r\n    operatorLink: string,\r\n    imgUrl?: string\r\n}\r\n\r\nMainPage.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:3000/api/operators');\r\n    const data : Array<OperatorsList> | undefined  = await  res.json();\r\n    console.log(data)\r\n    return {data: data}\r\n}\r\n\r\nexport default MainPage"]},"metadata":{},"sourceType":"module"}